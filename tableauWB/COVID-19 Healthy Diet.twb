<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
        <calculation class='tableau' formula='&quot;India&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Cabo Verde&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran (Islamic Republic of)&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Korea, North&quot;' />
          <member value='&quot;Korea, South&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Lao People&apos;s Democratic Republic&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Republic of Moldova&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russian Federation&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Taiwan*&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United Republic of Tanzania&quot;' />
          <member value='&quot;United States of America&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela (Bolivarian Republic of)&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Protein_Supply_Quantity_Data' inline='true' name='federated.06na8a00i6p7ns11l4i1g05ps0w3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Protein_Supply_Quantity_Data' name='textscan.1xyuuvm0skm3xl1h4pws811npej6'>
            <connection class='textscan' directory='/Users/ar-hari.prakash/Documents/myOpenSourceProjects/tableauLambdaExtensionAPI/tableauWB' filename='Protein_Supply_Quantity_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xyuuvm0skm3xl1h4pws811npej6' name='Protein_Supply_Quantity_Data.csv' table='[Protein_Supply_Quantity_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='Alcoholic Beverages' ordinal='1' />
            <column datatype='real' name='Animal Products' ordinal='2' />
            <column datatype='real' name='Animal fats' ordinal='3' />
            <column datatype='real' name='Aquatic Products, Other' ordinal='4' />
            <column datatype='real' name='Cereals - Excluding Beer' ordinal='5' />
            <column datatype='real' name='Eggs' ordinal='6' />
            <column datatype='real' name='Fish, Seafood' ordinal='7' />
            <column datatype='real' name='Fruits - Excluding Wine' ordinal='8' />
            <column datatype='real' name='Meat' ordinal='9' />
            <column datatype='real' name='Milk - Excluding Butter' ordinal='10' />
            <column datatype='real' name='Offals' ordinal='11' />
            <column datatype='real' name='Oilcrops' ordinal='12' />
            <column datatype='real' name='Pulses' ordinal='13' />
            <column datatype='real' name='Spices' ordinal='14' />
            <column datatype='real' name='Starchy Roots' ordinal='15' />
            <column datatype='real' name='Stimulants' ordinal='16' />
            <column datatype='real' name='Sugar Crops' ordinal='17' />
            <column datatype='real' name='Sugar &amp; Sweeteners' ordinal='18' />
            <column datatype='real' name='Treenuts' ordinal='19' />
            <column datatype='real' name='Vegetal Products' ordinal='20' />
            <column datatype='real' name='Vegetable Oils' ordinal='21' />
            <column datatype='real' name='Vegetables' ordinal='22' />
            <column datatype='real' name='Miscellaneous' ordinal='23' />
            <column datatype='real' name='Obesity' ordinal='24' />
            <column datatype='real' name='Undernourished' ordinal='25' />
            <column datatype='real' name='Confirmed' ordinal='26' />
            <column datatype='real' name='Deaths' ordinal='27' />
            <column datatype='real' name='Recovered' ordinal='28' />
            <column datatype='real' name='Active' ordinal='29' />
            <column datatype='real' name='Population' ordinal='30' />
            <column datatype='string' name='Unit (all except Population)' ordinal='31' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xyuuvm0skm3xl1h4pws811npej6' name='Protein_Supply_Quantity_Data.csv' table='[Protein_Supply_Quantity_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='Alcoholic Beverages' ordinal='1' />
            <column datatype='real' name='Animal Products' ordinal='2' />
            <column datatype='real' name='Animal fats' ordinal='3' />
            <column datatype='real' name='Aquatic Products, Other' ordinal='4' />
            <column datatype='real' name='Cereals - Excluding Beer' ordinal='5' />
            <column datatype='real' name='Eggs' ordinal='6' />
            <column datatype='real' name='Fish, Seafood' ordinal='7' />
            <column datatype='real' name='Fruits - Excluding Wine' ordinal='8' />
            <column datatype='real' name='Meat' ordinal='9' />
            <column datatype='real' name='Milk - Excluding Butter' ordinal='10' />
            <column datatype='real' name='Offals' ordinal='11' />
            <column datatype='real' name='Oilcrops' ordinal='12' />
            <column datatype='real' name='Pulses' ordinal='13' />
            <column datatype='real' name='Spices' ordinal='14' />
            <column datatype='real' name='Starchy Roots' ordinal='15' />
            <column datatype='real' name='Stimulants' ordinal='16' />
            <column datatype='real' name='Sugar Crops' ordinal='17' />
            <column datatype='real' name='Sugar &amp; Sweeteners' ordinal='18' />
            <column datatype='real' name='Treenuts' ordinal='19' />
            <column datatype='real' name='Vegetal Products' ordinal='20' />
            <column datatype='real' name='Vegetable Oils' ordinal='21' />
            <column datatype='real' name='Vegetables' ordinal='22' />
            <column datatype='real' name='Miscellaneous' ordinal='23' />
            <column datatype='real' name='Obesity' ordinal='24' />
            <column datatype='real' name='Undernourished' ordinal='25' />
            <column datatype='real' name='Confirmed' ordinal='26' />
            <column datatype='real' name='Deaths' ordinal='27' />
            <column datatype='real' name='Recovered' ordinal='28' />
            <column datatype='real' name='Active' ordinal='29' />
            <column datatype='real' name='Population' ordinal='30' />
            <column datatype='string' name='Unit (all except Population)' ordinal='31' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alcoholic Beverages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alcoholic Beverages]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Alcoholic Beverages</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Products]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Animal Products</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal fats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal fats]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Animal fats</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aquatic Products, Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aquatic Products, Other]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Aquatic Products, Other</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cereals - Excluding Beer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cereals - Excluding Beer]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Cereals - Excluding Beer</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eggs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Eggs]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Eggs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fish, Seafood</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fish, Seafood]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Fish, Seafood</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fruits - Excluding Wine</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fruits - Excluding Wine]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Fruits - Excluding Wine</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meat]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Meat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk - Excluding Butter</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk - Excluding Butter]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Milk - Excluding Butter</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offals]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Offals</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oilcrops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oilcrops]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Oilcrops</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pulses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pulses]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Pulses</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spices]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Spices</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starchy Roots</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Starchy Roots]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Starchy Roots</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stimulants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stimulants]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Stimulants</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugar Crops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sugar Crops]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Sugar Crops</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugar &amp; Sweeteners</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sugar &amp; Sweeteners]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Sugar &amp; Sweeteners</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Treenuts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Treenuts]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Treenuts</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetal Products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vegetal Products]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Vegetal Products</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetable Oils</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vegetable Oils]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Vegetable Oils</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vegetables]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Vegetables</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miscellaneous</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miscellaneous]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Miscellaneous</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Obesity</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Undernourished</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Undernourished]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Undernourished</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit (all except Population)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit (all except Population)]</local-name>
            <parent-name>[Protein_Supply_Quantity_Data.csv]</parent-name>
            <remote-alias>Unit (all except Population)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='min' datatype='integer' name='[Calculation_2661486690954821632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(1)' />
      </column>
      <column caption='Obesity [ABS]' datatype='real' name='[Calculation_2661486690956296193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Obesity]/100)*[Population]' />
      </column>
      <column caption='Obesity Rate' datatype='real' default-format='p0.0%' name='[Calculation_2661486690957041666]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Obesity]/100' />
      </column>
      <column caption='Undernourished Rate' datatype='real' default-format='p0.0%' name='[Calculation_2661486690958016515]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Undernourished]/100' />
      </column>
      <column caption='Undernourished [ABS]' datatype='real' name='[Calculation_2661486690958852100]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Undernourished]/100)*[Population]' />
      </column>
      <column caption='Country Calc' datatype='string' name='[Calculation_2661486691044007943]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Country Parameter] = [Country]&#10;then [Country] &#10;ELSEIF [Parameters].[Country Parameter] = &apos;All&apos;&#10;then [Country]&#10;END' />
      </column>
      <column caption='Contains' datatype='boolean' name='[Calculation_2661486691044917256]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([Country],[Country]) OR [Parameters].[Country Parameter]=&apos;All&apos;' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' default-format='p0.0%' name='[Obesity]' role='measure' type='ordinal' />
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Protein_Supply_Quantity_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2661486690956296193]' derivation='Sum' name='[sum:Calculation_2661486690956296193:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2661486690958852100]' derivation='Sum' name='[sum:Calculation_2661486690958852100:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Obesity]' derivation='Sum' name='[sum:Obesity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2661486690954821632]' derivation='User' name='[usr:Calculation_2661486690954821632:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[usr:Calculation_2661486690954821632:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690958852100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Obesity:qk]&quot;</bucket>
            </map>
            <map to='#f2f2f2'>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#fe9c7b'>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690956296193:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
          <calculation class='tableau' formula='&quot;India&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Protein_Supply_Quantity_Data.csv' id='Protein_Supply_Quantity_Data.csv_90B65553F76348549A59EC84AFFF8B48'>
            <properties context=''>
              <relation connection='textscan.1xyuuvm0skm3xl1h4pws811npej6' name='Protein_Supply_Quantity_Data.csv' table='[Protein_Supply_Quantity_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Alcoholic Beverages' ordinal='1' />
                  <column datatype='real' name='Animal Products' ordinal='2' />
                  <column datatype='real' name='Animal fats' ordinal='3' />
                  <column datatype='real' name='Aquatic Products, Other' ordinal='4' />
                  <column datatype='real' name='Cereals - Excluding Beer' ordinal='5' />
                  <column datatype='real' name='Eggs' ordinal='6' />
                  <column datatype='real' name='Fish, Seafood' ordinal='7' />
                  <column datatype='real' name='Fruits - Excluding Wine' ordinal='8' />
                  <column datatype='real' name='Meat' ordinal='9' />
                  <column datatype='real' name='Milk - Excluding Butter' ordinal='10' />
                  <column datatype='real' name='Offals' ordinal='11' />
                  <column datatype='real' name='Oilcrops' ordinal='12' />
                  <column datatype='real' name='Pulses' ordinal='13' />
                  <column datatype='real' name='Spices' ordinal='14' />
                  <column datatype='real' name='Starchy Roots' ordinal='15' />
                  <column datatype='real' name='Stimulants' ordinal='16' />
                  <column datatype='real' name='Sugar Crops' ordinal='17' />
                  <column datatype='real' name='Sugar &amp; Sweeteners' ordinal='18' />
                  <column datatype='real' name='Treenuts' ordinal='19' />
                  <column datatype='real' name='Vegetal Products' ordinal='20' />
                  <column datatype='real' name='Vegetable Oils' ordinal='21' />
                  <column datatype='real' name='Vegetables' ordinal='22' />
                  <column datatype='real' name='Miscellaneous' ordinal='23' />
                  <column datatype='real' name='Obesity' ordinal='24' />
                  <column datatype='real' name='Undernourished' ordinal='25' />
                  <column datatype='real' name='Confirmed' ordinal='26' />
                  <column datatype='real' name='Deaths' ordinal='27' />
                  <column datatype='real' name='Recovered' ordinal='28' />
                  <column datatype='real' name='Active' ordinal='29' />
                  <column datatype='real' name='Population' ordinal='30' />
                  <column datatype='string' name='Unit (all except Population)' ordinal='31' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.06na8a00i6p7ns11l4i1g05ps0w3'>
      <datasources>
        <datasource caption='Protein_Supply_Quantity_Data' name='federated.06na8a00i6p7ns11l4i1g05ps0w3' />
      </datasources>
      <datasource-dependencies datasource='federated.06na8a00i6p7ns11l4i1g05ps0w3'>
        <column caption='Country Calc' datatype='string' name='[Calculation_2661486691044007943]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [Parameters].[Country Parameter] = [Country]&#10;then [Country] &#10;ELSEIF [Parameters].[Country Parameter] = &apos;All&apos;&#10;then [Country]&#10;END' />
        </column>
        <column caption='Contains' datatype='boolean' name='[Calculation_2661486691044917256]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CONTAINS([Country],[Country]) OR [Parameters].[Country Parameter]=&apos;All&apos;' />
        </column>
        <column-instance column='[Calculation_2661486691044007943]' derivation='None' name='[none:Calculation_2661486691044007943:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_2661486691044917256]' derivation='None' name='[none:Calculation_2661486691044917256:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Calculation_2661486691044007943:nk]' />
          <groupfilter function='member' level='[none:Calculation_2661486691044007943:nk]' member='%null%' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044917256:nk]'>
        <groupfilter function='member' level='[none:Calculation_2661486691044917256:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <edit-parameter-action caption='Parameter1&lt;[Parameters].[Country Parameter]&gt;' name='[Action1_01F3556120A64C8ABFCB962002381138]'>
      <activation type='on-select' />
      <source dashboard='Covid Lambda Function' type='sheet' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Country:nk]' />
        <param name='target-parameter' value='[Parameters].[Country Parameter]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Obesity Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Protein_Supply_Quantity_Data' name='federated.06na8a00i6p7ns11l4i1g05ps0w3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
              <calculation class='tableau' formula='&quot;India&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06na8a00i6p7ns11l4i1g05ps0w3'>
            <column caption='min' datatype='integer' name='[Calculation_2661486690954821632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN(1)' />
            </column>
            <column caption='Obesity [ABS]' datatype='real' name='[Calculation_2661486690956296193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Obesity]/100)*[Population]' />
            </column>
            <column caption='Obesity Rate' datatype='real' default-format='p0.0%' name='[Calculation_2661486690957041666]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Obesity]/100' />
            </column>
            <column caption='Country Calc' datatype='string' name='[Calculation_2661486691044007943]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Country Parameter] = [Country]&#10;then [Country] &#10;ELSEIF [Parameters].[Country Parameter] = &apos;All&apos;&#10;then [Country]&#10;END' />
            </column>
            <column caption='Contains' datatype='boolean' name='[Calculation_2661486691044917256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([Country],[Country]) OR [Parameters].[Country Parameter]=&apos;All&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' default-format='p0.0%' name='[Obesity]' role='measure' type='ordinal' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2661486691044007943]' derivation='None' name='[none:Calculation_2661486691044007943:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2661486691044917256]' derivation='None' name='[none:Calculation_2661486691044917256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2661486690956296193]' derivation='Sum' name='[sum:Calculation_2661486690956296193:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2661486690957041666]' derivation='Sum' name='[sum:Calculation_2661486690957041666:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2661486690954821632]' derivation='User' name='[usr:Calculation_2661486690954821632:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690956296193:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044917256:nk]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[usr:Calculation_2661486690954821632:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]' value='333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' />
              <wedge-size column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]' />
              <lod column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' />
              <lod column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690957041666:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Obesity Rate:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690957041666:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[usr:Calculation_2661486690954821632:qk]</rows>
        <cols>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</cols>
      </table>
      <simple-id uuid='{ED9EDE66-9D69-42BB-8988-F33672854A8D}' />
    </worksheet>
    <worksheet name='Percentage of Protein Intake'>
      <table>
        <view>
          <datasources>
            <datasource caption='Protein_Supply_Quantity_Data' name='federated.06na8a00i6p7ns11l4i1g05ps0w3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
              <calculation class='tableau' formula='&quot;India&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06na8a00i6p7ns11l4i1g05ps0w3'>
            <column datatype='real' name='[Alcoholic Beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Animal Products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Animal fats]' role='measure' type='quantitative' />
            <column datatype='real' name='[Aquatic Products, Other]' role='measure' type='quantitative' />
            <column caption='Country Calc' datatype='string' name='[Calculation_2661486691044007943]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Country Parameter] = [Country]&#10;then [Country] &#10;ELSEIF [Parameters].[Country Parameter] = &apos;All&apos;&#10;then [Country]&#10;END' />
            </column>
            <column caption='Contains' datatype='boolean' name='[Calculation_2661486691044917256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([Country],[Country]) OR [Parameters].[Country Parameter]=&apos;All&apos;' />
            </column>
            <column datatype='real' name='[Cereals - Excluding Beer]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Eggs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fish, Seafood]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fruits - Excluding Wine]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meat]' role='measure' type='quantitative' />
            <column datatype='real' name='[Milk - Excluding Butter]' role='measure' type='quantitative' />
            <column datatype='real' name='[Miscellaneous]' role='measure' type='quantitative' />
            <column datatype='real' name='[Offals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oilcrops]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pulses]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2661486691044007943]' derivation='None' name='[none:Calculation_2661486691044007943:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2661486691044917256]' derivation='None' name='[none:Calculation_2661486691044917256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Alcoholic Beverages]' derivation='Sum' name='[sum:Alcoholic Beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Animal Products]' derivation='Sum' name='[sum:Animal Products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Animal fats]' derivation='Sum' name='[sum:Animal fats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aquatic Products, Other]' derivation='Sum' name='[sum:Aquatic Products, Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cereals - Excluding Beer]' derivation='Sum' name='[sum:Cereals - Excluding Beer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eggs]' derivation='Sum' name='[sum:Eggs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fish, Seafood]' derivation='Sum' name='[sum:Fish, Seafood:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruits - Excluding Wine]' derivation='Sum' name='[sum:Fruits - Excluding Wine:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meat]' derivation='Sum' name='[sum:Meat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk - Excluding Butter]' derivation='Sum' name='[sum:Milk - Excluding Butter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Miscellaneous]' derivation='Sum' name='[sum:Miscellaneous:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Offals]' derivation='Sum' name='[sum:Offals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oilcrops]' derivation='Sum' name='[sum:Oilcrops:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pulses]' derivation='Sum' name='[sum:Pulses:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Cereals - Excluding Beer:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Animal Products:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Milk - Excluding Butter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Meat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Pulses:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Offals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Fruits - Excluding Wine:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Eggs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Oilcrops:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Fish, Seafood:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Miscellaneous:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Animal fats:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Aquatic Products, Other:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Alcoholic Beverages:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Cereals - Excluding Beer:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Animal Products:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Milk - Excluding Butter:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Meat:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Pulses:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Offals:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Fruits - Excluding Wine:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Eggs:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Oilcrops:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Fish, Seafood:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Miscellaneous:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Animal fats:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Aquatic Products, Other:qk]&quot;</bucket>
              <bucket>&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Alcoholic Beverages:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044917256:nk]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='248' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' value='192' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]' />
              <text column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</rows>
        <cols>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</cols>
      </table>
      <simple-id uuid='{A9A5C622-A0B2-4366-BDE4-02D50B8D8F2F}' />
    </worksheet>
    <worksheet name='Undernourished Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Protein_Supply_Quantity_Data' name='federated.06na8a00i6p7ns11l4i1g05ps0w3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
              <calculation class='tableau' formula='&quot;India&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06na8a00i6p7ns11l4i1g05ps0w3'>
            <column caption='min' datatype='integer' name='[Calculation_2661486690954821632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN(1)' />
            </column>
            <column caption='Undernourished Rate' datatype='real' default-format='p0.0%' name='[Calculation_2661486690958016515]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Undernourished]/100' />
            </column>
            <column caption='Undernourished [ABS]' datatype='real' name='[Calculation_2661486690958852100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Undernourished]/100)*[Population]' />
            </column>
            <column caption='Country Calc' datatype='string' name='[Calculation_2661486691044007943]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Country Parameter] = [Country]&#10;then [Country] &#10;ELSEIF [Parameters].[Country Parameter] = &apos;All&apos;&#10;then [Country]&#10;END' />
            </column>
            <column caption='Contains' datatype='boolean' name='[Calculation_2661486691044917256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([Country],[Country]) OR [Parameters].[Country Parameter]=&apos;All&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Undernourished]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2661486691044007943]' derivation='None' name='[none:Calculation_2661486691044007943:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2661486691044917256]' derivation='None' name='[none:Calculation_2661486691044917256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2661486690958016515]' derivation='Sum' name='[sum:Calculation_2661486690958016515:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2661486690958852100]' derivation='Sum' name='[sum:Calculation_2661486690958852100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2661486690954821632]' derivation='User' name='[usr:Calculation_2661486690954821632:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690958852100:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044917256:nk]</column>
            <column>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[usr:Calculation_2661486690954821632:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]' value='325' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' />
              <wedge-size column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]' />
              <lod column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' />
              <lod column='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690958016515:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Undernourished Rate:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690958016515:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[usr:Calculation_2661486690954821632:qk]</rows>
        <cols>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</cols>
      </table>
      <simple-id uuid='{D44BA046-D51E-474F-B43D-A90673A3882B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid Lambda Function'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='country' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;India&quot;'>
          <calculation class='tableau' formula='&quot;India&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Cabo Verde&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea-Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran (Islamic Republic of)&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kiribati&quot;' />
            <member value='&quot;Korea, North&quot;' />
            <member value='&quot;Korea, South&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Lao People&apos;s Democratic Republic&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Republic of Moldova&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russian Federation&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;Samoa&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Taiwan*&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor-Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turkmenistan&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United Republic of Tanzania&quot;' />
            <member value='&quot;United States of America&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela (Bolivarian Republic of)&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='horz' w='98858' x='571' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='horz' w='87429' x='571' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='87429' x='571' y='1000'>
                <zone h='49000' id='3' name='Percentage of Protein Intake' w='87429' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39627' id='8' name='Obesity Rate' w='43713' x='571' y='59373'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39626' id='12' name='Undernourished Rate' w='43716' x='44284' y='59374'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9373' id='11' name='Obesity Rate' pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' w='43713' x='571' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9374' id='15' name='Undernourished Rate' pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' w='43716' x='44284' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='16' is-fixed='true' param='vert' w='11429' x='88000' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6500' id='19' mode='compact' param='[Parameters].[Country Parameter]' w='11429' x='88000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='22' param='vert' w='98858' x='571' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Percentage of Protein Intake' w='87429' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6500' id='19' mode='compact' param='[Parameters].[Country Parameter]' w='11429' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39627' id='8' is-fixed='true' name='Obesity Rate' w='43713' x='571' y='59373'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9373' id='11' name='Obesity Rate' pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' w='43713' x='571' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39626' id='12' is-fixed='true' name='Undernourished Rate' w='43716' x='44284' y='59374'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9374' id='15' name='Undernourished Rate' pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' w='43716' x='44284' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E84006E2-6DA4-445F-81A6-6B3D4E6FD1BF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percentage of Protein Intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[Multiple Values]' type='size' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044917256:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{817A3618-E783-441A-ADB0-244994D00881}' />
    </window>
    <window class='worksheet' name='Obesity Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Country:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690957041666:ok]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Obesity:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76DC21CB-25B7-4120-9B6B-F1BE971621AE}' />
    </window>
    <window class='worksheet' name='Undernourished Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Calculation_2661486691044007943:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[none:Country:nk]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690957041666:ok]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Calculation_2661486690958016515:ok]</field>
            <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[sum:Obesity:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BB1AB50-0196-4F28-87A3-46D9AB895ED3}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Lambda Function'>
      <viewpoints>
        <viewpoint name='Obesity Rate'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Percentage of Protein Intake' />
        <viewpoint name='Undernourished Rate'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06na8a00i6p7ns11l4i1g05ps0w3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{02DCB765-AEF8-4C94-B8F0-C891FEC78615}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Covid Lambda Function' width='384'>
      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
      tGvX7pbrLCgoYNWqVQAMGjSI/v37N7nc6tWrefTRR3FwcLhhXkxMDH5+fhw4cIBXXnnld0dZ
      Wr9+PU8++SQ7d+6kffv2ODo6cunSJU6dOtWs1wvxezZu3EhaWhpPP/204U65srIyvv/+e6ys
      rHjkkUfYtm0bAK6urjz99NPGLFeYuGY1gGtjAoeEhFBYWMiVK1coLi7G2tqagQMHcvDgQfr2
      7Uu7du3YsGEDKSkpTJo0idraWs6ePctDDz2Er69vo3WWlZXh5ubG008/jbm5OTt37mT48OEc
      PXqU7t27s379ejp37szly5fRaDQcPHjQsK0+ffqwfv16kpOTeeaZZwgODkan07FlyxauXLnC
      oEGD8Pb2ZsOGDdjY2DBu3DhsbGw4efIko0eP5ujRo+Tl5eHp6Ymzs3OTr3dzcyM6Oprw8HD6
      9OlzR3a+aF2uTwIvWLCA6dOnA/D999/z+uuvY2trC8CUKVP49ddfKS017ngPQjT7YXDbt29n
      zZo1ZGVlsXjxYnx9fRuNDVxfX09sbCxdunQhNDSUTp06sXLlSvr372+4wJWens7JkycN64yL
      i2PhwoUkJyej0Wh4/fXXcXNzY+nSpQwcOLBRfuD6bUVHR+Pu7k5ISIhhnkajYaTPF/8AACAA
      SURBVP/+/QwdOpQNGzYQGRlJ7969ycjIoK6uDoCwsDASExPx8PCgvLycs2fP0rVr1yZff/24
      xjKUpWiOmyWBL126xLfffsuMGTNQqVQA7Ny5kwcffNBYpQoB/IEGMGTIEMaNGwfAk08+afjW
      rNfrG40P7ODggJWVFXZ2dkybNo29e/dy8OBB4OrdDvX19YZlhw0bxowZMwgPD8fPz4+SkhKc
      nZ2pra3F39/fEJ8HGo1DXFxcTEhICPb29o1qdHNzw9/fH71eT21tLV5eXo1O63Tr1o21a9cS
      GhqKQqGgqqoKJyenJl9//bjGWq22ubtJmLCbJYF9fHz4+9//zv33309GRgbJycmEhYXJKUdh
      dM06BeTh4YGvry9ubm5cuXLFcA0gLCyMDz74AIVCYUj/BgUFGR4Ql5CQQE1NDQEBAQCEhv7f
      hUw7OztOnz7NRx99xNChQzl16hRff/0127dv5+mnn+aTTz6hW7du+Pn5YW5u3mgc4mHDhvHF
      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
    </thumbnail>
    <thumbnail height='384' name='Obesity Rate' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASnklEQVR4nO3de4wd5XnH8d87M+eyN18We33HBhtj7NgGQ1wTlJbGQlBBSCo1UUWaiEaF
      tJFQpVRVk7ZR1DSN1Kqtgooi1IJS0tAERZBCgqhDbK422GAbDNjB9wvY2F7j++45Z2bet38c
      nJJws7F3Z895vh+Jf5BlHlgz33nfubkQQhAAwBTnnIuKHgIAUAwCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABiVnM4vqtVqQz0HAGCYnVYAoihSuVwe6lkAAMOILSAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQA
      AIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADA
      KAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwi
      AABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIA
      AEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADAqKXoAoAghBCmrKaQDUt6QfC75TMHnUv24lJSl
      uCIXJVIUS3FZrlSVko7m33Ou6H8F4KwRALSd4HOpcVyhdkyhcVJh8LD8sb0KR1+TP3FAoXZE
      oXZUylMFSdJvHMxP7JdzZSkuv3Wgd1LkmiGIYrlSh1xnr1x3n6KeSXLdE5p/dYyWq/TIVXqa
      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
    </thumbnail>
    <thumbnail height='384' name='Percentage of Protein Intake' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXgUVdr4/W91pztJZ99DEggBJCHsCRLZBXHFFVFBFJfBdUZFB2d8+MGI
      qDyCiogaF1xg0AGUEXBFEEXWQNgDYQshIWTf00nv3fX+wZt6jCwCtiLk/lwXF1eqTp0+VYG6
      u845dW5FVVUVIYQQrY7ufDdACCHE+SEBQAghWikJAEII0UpJABBCiFZKAoAQQrRSEgCEEKKV
      kgAghBCtlAQAIYRopSQACCFEKyUBQAghWikJAEII0UpJABBCiFZKAoAQQrRSEgCEEKKVkgAg
      hBCtlM/5boAQQlzMrFYrx44dw2q1Eh0dTWxs7PlukkYCgBBC/A6cTidr165lwYIFlJeX43a7
      MZlMPPTQQ1x77bV/SBtKS0tZuXIlQ4YMoX379ifslwAghBBepqoqGzZsYPr06ZhMJkaPHk1o
      aCg7d+6ktrb2hLKqqqIoCoqinPPnNft5HaWlpXz44YfExcVJABBCiD+C3W7n7bffJiQkhFdf
      fZWkpCQAbrzxRq2M2+0mNzeXrKwsLBYLSUlJXH311fj6+qKqKnv27KG6upqMjAz8/f2x2+1s
      2bKFwMBAevbsSV1dHevXr6dHjx4UFhayb98+TCYTQ4cOJSEhgQMHDrBhwwZcLhfZ2dlYrVb8
      /f0ZNmwY2dnZ2O12CQBCCOFtx44d4/DhwzzwwAMkJiZq25u/nauqyooVK5g9ezaBgYH4+fmx
      bNkytm7dysSJEwkMDGTFihXs3LmTLl264O/vj8Vi4aOPPiIpKYnu3btz7Ngxpk+fTlRUFHq9
      Hp1OR2lpKdu2bWP69Ons2rWLVatW4XA4WL9+Pbt27SIiIoLLL7+cxYsXU1lZKQFACCG8raio
      CIDU1FR0uhMnW1ZUVLBw4ULi4uKYOnUqQUFBfPHFF8ydO5dBgwZxxRVX4PF4cLlcLY5zu924
      3W6t28jlcjFgwABGjBihPW0UFhZSU1PDNddcQ0hICC+++CLjxo1jwIAB+Pj44OPjg9vt5ujR
      ozINVAghvM1utwNgNBpPur+oqIjy8nJuvfVW2rdvT2RkJHfffTd+fn5kZ2ef1WcNHDiQ7t27
      07ZtW1JTU/F4PLjdbkJCQoiOjkan0xEREUHbtm1p06aN9hTicrkkAAghhLe1bdsWgMOHD590
      f1NTE263m/DwcO2GbDAYCA8PP2GQ+PfSrl07CQBCCOFt7dq1IyIigh9//JHq6mptu6qquN1u
      goKC8PHxoby8XJvBY7VaqaqqIioqqkX55v0/n+lztmw22wnH+/j4SAAQQghvCwwMZMyYMezd
      u5fp06ezfft2Dh48yBdffMHatWtp164dsbGxfPrppxQWFtLQ0MAHH3yA3W4nIyMDOP5EUFNT
      w+7duzly5AgrVqygrKzsrNrh7++PwWDgp59+oqioiIqKihaBQAaBhRDCyxRFYfTo0TgcDpYt
      W8bjjz+Ooijo9XoeffRRIiIieOihh5gxYwb33HMPOp0Op9PJnXfeSZ8+fVAUhd69e/Pll1/y
      3HPPYTAYiImJweFwaPU3dx398t2Bn//crl07Bg0axLfffsuWLVuIjY3lk08+0Y5X1N/yXCGE
      EOKUHA4HhYWFFBUV0djYSJs2bUhOTiYoKAiPx0NhYSG7du3CYrHQoUMH0tLS8PX11Y7dvn07
      +fn5REVFkZKSQkNDAyaTifbt29PU1MS+ffvo3LkzISEhqKpKSUkJ1dXVdO7cGT8/PwBqamrY
      tWsXNTU1xMTE0L9/f/Ly8nC5XBIAhBCitZIxACGEaKUkAAghRCslAUAIIVopCQBCCNFKSQAQ
      QohWSgKAEEK0UhIAhBCilZIAIIQQrZQEACGEaKUkAAghRCslAUAIIVoBi8WCxWJpsU0CgBBC
      /EnV19ezceNGSktLf3Ndb7zxBq+//nqLbRIAhBDiT+rw4cM8/fTTrF+//jfXlZeXx6FDh1ps
      kwAghBAXCVVVaWpqwmq1nlF5SQgjhBAXCIvFwvvvv09cXByDBw9m0aJFOJ1OHnjgAdxuN3Pn
      zmX//v0oisKQIUMYOXIkgYGBJ61r27ZtEgCEEOJC4XQ62bhxI/Hx8WRnZ7N69WoyMjJoaGgg
      MzOT7Oxsrr/+emw2G5mZmbjdbu67776T1vWf//xHAoAQQlxoNmzYQMeOHXnzzTdJS0sjJyeH
      H3/8kccff5w77rgDl8tFbW0tK1eu5LrrriMmJuaEOiZPniwBQAghLjRxcXE888wzdOvWDUVR
      OHr0KE6nE5vNxo8//oiqquj1eurr66mtrT1pALDb7RIAhBDiQtO9e3ft5g9og77Lli3DaDRq
      5WJjYzlZ1t/6+npmzJghAUAIIS40iqJoN3+Atm3boigK999/PzfeeKO2z+FwtCjXbP/+/ezZ
      s0cCgBBCXOg6d+5Mly5d+PDDD3G5XLRt25b8/Hx27drFQw89RPv27VuUN5lM6HQ6CQBCCPFn
      pdPp8PPzw8fn+K1aURT8/PxadPMAREdH8/TTTzNjxgxmzZqFqqr4+/tzzTXXEBISAoDBYECv
      1wPQsWNHhgwZgqKerINICCHEBUdVVcxmM1arlYiICC1wnIzb7ZYAIIQQrZUsBSGEEK2UBAAh
      hGilJAAIIUQrdUazgFwuFx6P5/duixBCiD/QGQWAsrIyysrKfu+2CCF+haIoREdHa9P5hPgt
      zmgWkNvtPunrxEKIP5aqqng8Hnx9fc93U8RF4IyeAOTbhhB/Dqqq4nA4znczxEVC3gQW4gKz
      63A5OUeqz3czxJ+YQa9j3DU9f7WcBAAhLjB5x6r5YsOB890M8Sfma9SfUQCQaaBCCNFKXdQB
      wOPxUFFRQW1t7QUziO1wOCgtLcVisZxzHW63m7KyMmpra73YMiHExcZrXUCqqlJYWMiqVavI
      zc3F5XLRrVs3Ro4cSVRUlLc+5qzU1dXx1FNP0bFjR6ZMmXLahZHO1qeffkpeXt4J21NTU7n5
      5pvPud59+/bx9NNP8+ijj55zPWazmSeeeIKuXbvyr3/9i5ycHF544QVuueUWRo8efc5tO5Wi
      oiI+/fRT7HY7AD4+PoSFhZGWlka3bt1kxooQf1JeuSOqqsrOnTuZNm0aDQ0NxMXFodfrWbp0
      KT179jxvAeD3tGnTJjZt2kSHDh1abA8MDDxPLTo1Hx8fQkJCCAgI+F3qr6mp4csvvyQoKIiw
      sDDcbjf19fUsWrSIe+65h3Hjxv0unyuE+G28EgDq6up47733sFgsTJo0if79++Pj48OBAweI
      jY0F/m/6WmVlJX5+foSEhODj44OiKKiqitPpRKfTodfrcTqdwPH1q+F4t0hFRQUmk4mQkBD0
      er12nNvtxu12Y7FYUBSFgIAArd6T8Xg8OBwOrFYrvr6+GAyG05Y/ncjISObOndtim16v185H
      URStbo/Hg9PpxMfHRyvjcrloaGgAICgoSDvfX7bX6XRiMBjQ6XTaOXs8HgwGg9bu5vOy2+3Y
      7fYWXV4pKSm88cYb2hOQx+PB5XKh1+txu93U1dVhMBgIDg5Gp9NpdbpcLhwOBy6XCz8/PxRF
      0X5Hv6TX67n77ru5+eabcblclJaWMnHiRL755htGjx6N0WjUzrmqqgpFUQgPD29xDs3Xrba2
      Fo/HQ2RkZIvr19xmRVG0fy8nu2ZCiDPjlQCQk5PD9u3befTRRxk6dCg63fGhhW7dumllNm3a
      xOuvv87hw4fR6XT069ePf/zjH8THx1NcXMykSZO44oorSEhIIDMzk8TERF588UWysrJ47bXX
      KCkpQa/XM3DgQKZMmUJoaCgej4epU6eyceNGGhoa0Ol09OzZk6effprOnTuf0E6bzcbixYuZ
      P38+DQ0N+Pj40LNnT1544YVzekppDji/1NTUxOTJk6mtrWXatGm0a9eOpUuX8sknn/DEE08w
      ZMgQNm7cyHvvvUdubi6KotC1a1fefffdE+rasmULkydPZs6cOaSmpgLw9ttvs3PnTmbMmEFk
      ZCRms5lFixaxaNEiGhoaCAkJwWazade/pKSE+++/nwkTJnDttdeyc+dOXnjhBXr06EFubi5H
      jhxBr9dzzz33MH78eAwGA0VFRcyZM4esrCysVisdO3bEZDJx3333MXjw4JNeD71ej9FoxGg0
      kpiYSHh4OI2NjbhcLoxGI7m5ucyaNYtdu3ahKAopKSlMnTpVe4o6cOAA06dPZ9++faiqSs+e
      PfnHP/5BcnIyu3fv5oUXXuDhhx+mqqqKefPmMXz4cCZOnHjWvzchxHFeGQQuKChAr9dz2WWX
      aTf/n6upqWHmzJkEBwfzwQcfMG3aNA4ePMhHH30EoHUZZGdnM2fOHIxGI927d6egoIA333yT
      du3aMW/ePCZNmsSOHTtYtGgRbrcbAIvFwn333cfrr7/OY489xsGDB5k/f/5J21lYWMjcuXPJ
      yMhg1qxZPPvsswQFBWlPHGfL4XCwffv2Fn9KSkowmUzcddddFBUVMW/ePA4dOsTcuXPp2bMn
      l112GXl5ebzyyivYbDamTZvG888/T5cuXU46UO1wOKirq2vRRqvVSkNDg1Z++fLlzJ8/n0sv
      vZTnnnuO+++/v0W/u8vloq6uDpvNpv1cW1tLTk4OAwcO5B//+Aft27dn+fLlNDU10dTUxGuv
      vca2bdu49dZbeemll+jduzf5+fmnfAlJVVWKiorYvn07P/zwA9OmTaO4uJhRo0bh7++P2Wzm
      9ddfp66ujnfffZdZs2ZhsVh4++23sVqtNDY28uqrr+J0Opk9ezaZmZlUVFTwzjvvaE8hdXV1
      /PDDD8ydO5c2bdpwySWXnNPvTQhxnFeeACoqKlAUhcjIyJPuz87OpqKigr/+9a907dqV1NRU
      1qxZw+rVq5k0aZJWbuvWrdx000385S9/ITo6miVLllBVVcWECRNISUkhMTGRNWvWsGXLFm6/
      /XbCwsKYPn261rWQmprK6tWrOXTo0EnbYbFYsNvtdOrUiZ49e+Lv788VV1xxQpeGy+WivLwc
      VVVRFIWwsDBMJtMJ9dXU1PDUU0+12HbXXXcxfvx40tLSuPHGG/n888/JyckhLCyMe++9F6PR
      yLp162hsbOT555/nsssuA+DKK688p24ol8vFV199RYcOHZgyZQoBAQHU1dWxfPny0x6n0+m4
      7777uP766wGorKzkk08+0WZObdy4kXHjxvHAAw9gMBgICAjghx9+OGV9Ho+HJUuWsGzZMu2G
      PXbsWIYPH46iKOzfv5+8vDzuueceevbsiaqqXH755SxevJiGhgZqamrYtWsXjz32GBkZGQAM
      Hz6cFStWcPToUe0z1q5dy/3338+oUaMIDg4+6+slhPg/XgkAkZGRqKpKbW0tERERJ+w/duwY
      qqqyYsUKNm/eDBzvlmhqamoxVXHIkCFMmDABf39/AI4ePYrL5eKbb77hp59+0o6z2WxYLBZC
      Q0P58ssv+frrrykuLsZqteJ0OmnTps1J25mUlMTgwYN5++23+fzzz+nRowcjRowgIyOjRRAo
      LCzkjjvuAMBoNDJlyhSuvfbaE+oLDw/npZdearEtJiYGON49dNddd5Gdnc3+/ft58cUXSUxM
      RFVVDh8+TEREBF26dNGOO9mT05moqqqirq6OESNGnNUgb3Nu0Wa+vr7aE0Xzde/bt+8Z97Hr
      dDpuu+02Bg8eTGNjIwcOHOA///kPNTU1TJo0icrKSmw2G5s3b6aoqAg4/u/CZrNRVVXFsWPH
      8Hg8bN26lcLCQuD47KLm/c1jAaNGjeL+++8/4/MUQpyaVwJAUlISqqpqs2J+eTNrvrn4+flp
      39r69OnDpZde2iLZcVJSUoubkp+fH6qqYjQateMGDBhAQEAAAQEBWpfRTTfdxGOPPUZCQgIv
      v/zySadnAoSEhDBt2jR2795NdnY22dnZTJo0ienTpzNw4ECtXJs2bZg9e7bWrlN1NRiNRnr3
      7n3K61JQUEBNTQ16vZ5NmzYxaNAg/P39CQgIwOVyYbPZtITN56r5pu3N9xyaA0l19ZkvN6Ao
      CgkJCdr1GDBgAGazmZUrV1JUVKQN9jYPNsPxKbOpqamEhoZSVVUFHB9HaN7ftWtXevXqRUxM
      DNXV1eh0OlJSUrx2nkK0dl4JAKmpqaSkpLBkyRK6du1KSkoKiqJQVVVFUFAQiYmJ6PV6Lrnk
      EsaMGYPBYMBut1NaWkpQUBB1dXVaXT/vBmk+rmvXrtx88834+Phgt9upqqrCZDKxZ88efHx8
      uOWWW2jfvj1NTU2nXSirpqYGi8VCnz59yMjI4MiRI9x5553s37+/RQAwmUwtfj4Vj8dDU1NT
      i20+Pj74+vrS1NTEu+++S2hoKFdddRVLly7l0ksv5brrriM5OZmVK1eyceNGRowYARzv1w8K
      CjrhM5qDaWVlpTbDx2w2a/vDwsK0YNjQ0IDJZKKxsfGcxzUA4uLiCA8PZ/HixcTHxxMeHs6m
      TZu0ef6n4nQ6sVqt2oykgoICFEVBr9cTExNDQEAAsbGxPPjggxiNRpxOJ2VlZURFRWG32zEa
      jcTGxjJ+/Hj8/Py08Q+TyXRWwUgIcWa8EgCioqJ46KGHePbZZ/n73/9Ot27d8PHxIScnh3/9
      619cdtlldO3alQ8++IADBw4QHR2tDRiuXLnylPVmZGSQnJzMm2++SW5uLkFBQRQVFVFdXc0r
      r7xC+/bttcHFxMREduzYwaFDh07ZBbR161ZeeeUVBg8eTEREBAcOHEBRlJPOGDoT1dXV/P3v
      f2+x7dJLL+Wee+5hwYIFHDlyhOeee4709HRycnJ4//336dq1K8OGDeO7777j1VdfZfv27ej1
      evLz83nrrbdO+IzIyEgMBgOZmZn88MMPHD16lP3795OUlAQcf0q69tprmTt3Lk8++SSdOnVi
      7969HD16lF69ep3TeUVHR/PAAw8we/Zs7rvvPvR6PREREadNCuR2u1m6dClZWVlacC8uLuaW
      W24hISEBgH79+rFs2TKqq6uJj4+noqKCrKws5s+fT0JCAldddRXLly+ntLSUxMRESkpKyM/P
      51//+tc5nYcQ4vT0U6dOneqNiuLj4+nXrx86nY76+nqcTif9+vVjyJAhhISE0K9fP3x9fSku
      LqaqqoqwsDDuueceOnbsiMvlorq6mq5du7Z4scrf359+/fqhqirFxcXU1NQQERHBuHHj6NCh
      A4mJibjdbo4dO4bVauWaa66hR48eREZG0r9/f9xuN5WVlSQlJZGamkpkZCT+/v4cPHiQo0eP
      4uPjw/jx4xk0aNBZvyXc/F6Cn59fiz/x8fEkJiayevVqrrnmGoYPH47RaOSSSy6huroag8FA
      9+7d6devHwaDgaNHj2K1WklPT6dv3744HA7q6+vp3bs38fHxBAUFERgYSEVFBQ6Hg8suu4zL
      L7+csLAwLr30Unx9fUlOTiYgIIDi4mIaGxsZPHgwHTp0oHPnzqSmpuJ0OikvL6dv377Ex8dj
      s9kwm8306dNHG7Oor69HURSGDBmCn58fKSkpDBs2jPT0dG655Ra6d+/Oli1buPzyy2nfvn2L
      a2G326mrqyMwMBAfHx9MJhMpKSnce++9jBo1Cl9fX/R6Penp6URERFBUVERlZSW+vr6MHTuW
      Hj16YDQaycjIwGQyUV5eTllZGYGBgdx888306dMHl8uF2WwmPT1de7ektdqTX8beAnkiEqfm
      o9dx2+Vdf7XcGSWEORuqqmK32/F4PPj7+7fo0vn5Pj8/vzMe+DzdcW63m8bGRnx9fVuMH5yO
      1WrVuhxONrvnj6KqqjY1s/lFq5PxeDyYzWb0ej0BAQEnLaeqKo2Njdq7Cecyo6iZ1Wpl27Zt
      dOzYUevOyszMZNeuXbz66qstBq/PVvPLXk6nEz8/vxNmYDXvdzgc+Pv7Sy6KX1BVlYWrdrJ4
      jawGKk7N16jn06m3/Wo5ry8H/cvZJWe671zr1Ov1Zz2Q6u/vr800Op8URTmjduh0ul89R0VR
      TjqGcC4sFgsvv/wydrud0NBQysrKsNlsjBkz5jfPvVcURXtZ7Fz2CyG8R/IBiBOEhYXx9ttv
      s23bNqqqqvDz86NHjx4kJyd7dUE9IcT55fUuICHE70dVVUqr6miwus93U8SfmE5R6Nz2xHey
      fkkCgBAXkOZFFWWJbeENF3VCGCGEEKcmAUAIIVopCQBCCNFKSQAQQohWSub0CXGB+W5LHt9u
      KTjfzRAXAQkAQlxgGq0OSqrNv15QiF8hXUBCCNFKefUJQFVVSktLcblcBAcHExISclZr0lRV
      VVFWVkbbtm1/8zr5J+NyucjKysLlctG/f/8Tlhuw2Ww0NTVpa+v7+voSEBBwzslaTsftdrNp
      0yYcDgcDBw6UpQ+EEH84rwaA8vJy/vWvf1FbW8vAgQP561//elY3tp9++ol3332XKVOmMGjQ
      IG82DTieX/fzzz/HbreTnp5+Qts2b97MRx99pOUbNhqNtGvXjttvv13LceAtbreb5cuXYzab
      ufTSS39zANixYwcNDQ3079//jLN4CSFaN699tVVVlR07dlBYWIiqqqxevRqLxXJWdaSkpDB2
      7FgSExO91ayzUldXp+UT6NWrFxEREaxZs4YJEyZQXFx8Xtp0pr744gveeustrFbr+W6KEOIC
      4bUnALfbTVZWFrGxsdx2221MmzaN3Nxc+vfvD4DZbGb//v3ExcVRU1NDfn4+AH379iU2NhZF
      UYiJiSE1NVXr/ikvL6egoIC4uDjy8vK0RCK9e/fm0KFD5OXl4evrS58+fYiOjgaOr9Ofn59P
      VVUVqqrStm1bunbtesbfin18fBg5ciSXXnopbrebDRs28M9//pM1a9Zw2223sXfvXsLCwoiL
      i2P//v14PB66d++OXq/n6NGj5OTkUF9fT2JiIunp6S1W+7RYLOTm5lJWVkZAQAANDQ3aU4XZ
      bCYnJ4eUlBTCw8OB47l5Kyoq6Natm5Yes6SkhL1792I2m4mNjaVHjx4cPHiQiooKmpqa2LJl
      CyaTiYSEBNq2bUtTUxO5ublUVFTg6+tLbGwsycnJ0uUkhPBeALDb7WzZsoUhQ4bQv39/wsLC
      2LBhA5dddhk6nY6jR4/y/PPPYzKZtKTuDQ0N9OvXj6lTpxISEsKOHTt4/fXXtSxa2dnZzJw5
      k5iYGBobG7V0g7169aKoqIjGxkbMZjNXXnklkydPxtfXl5kzZ5Kbmwsc7/NXFIW//OUvjBo1
      6ozOQ1EULY2hXq/Xkq2UlpZSX1/PK6+8oiU2+fjjj+nSpQvTp0/n8OHDPP/889TX12M0GrFa
      rVx11VX89a9/JTg4mPr6et544w1+/PFH9Ho9RqOR+vp6unY9nrShsLCQp59+mhkzZmjpKFet
      WsVXX31FZmYmsbGxbNmyhdmzZ1NZWYnRaERRFCZOnMjHH3/MgQMHcDqdvPbaa+h0OsaMGcPN
      N9/MG2+8werVqzEajaiqio+PDy+++CI9evTw1q9eCHGB8loAyM3NpbKykoEDBxIUFESvXr3I
      ycmhtraWiIgILalLQkICd9xxBzExMcybN4+NGzdSV1dHSEgIbrcbm82m9cG73W5cLheDBg1i
      6NChlJaWMm3aNJqamnjyySeJjo7m1VdfZd++fdTU1NCmTRv69+/PbbfdRvv27ampqWHq1Kl8
      +umn3HjjjWd9TqqqsnfvXpqammjTpo12DuvXr8disdCvXz+uvvpqHA4H77//Pm63m5deeomE
      hAT++9//snDhQnr06MGIESP47rvvWLlyJddccw2jR4/GbrfzyiuvaJ/l8Xiw2+3aucPxAGa3
      21FVldraWjIzM2lqamLGjBnEx8dTUFBAdHQ0/+///T/mzJlDQUEBzz77LAEBAURGRlJQUMDa
      tWsZOnQo999/Pw6Hg5ycHC3puxCidfNKAHC73fz444+0adOGzp07YzQa6du3L5mZmRw+fJiI
      iOPLkup0OoYNG8bgwYNRFIVLL72Un3766bS5Zv38/Bg+fDipqalER0cTFRVF165dtUHibt26
      8dNPP2k3zuuvv54jR45w4MABrFYr0dHR7Ny587Sf8XNOp5PFixezevVqjh07Rk5ODu3ateOq
      q67SZgfV1tYyYcIEbrjhBvR6PQcOHODQoUPceeedpKenoygK48ePZ8WKFWzYsIERI0awbt06
      4uLieOyxxwgKCsLhcBAeHt4iwfvpHDx4kOLiYv72t7+RlpamdZnB8aeWsLAwSkpK6NixI8HB
      wcDxMQ2DwcDhw4fZv38/HTt25Nprr/1dZjUJIS48XgkANTU17NmzB7PZzAsvvIDBYKCqqoqm
      pia2bdtG3759tbLNXSy/RXMdv1zJ2m63k5mZybp16zAYDPj6+lJZWXlCudPxeDwcOnSI4uJi
      goODGTVqFDfddBNRUVFUVFQAcPnll3Pddddp6QotFgtWq1Uby4DjU0ijoqKoqqoCoLS0VMvx
      ey7q6+tRVZWYmBjtM37tOrZt25Zx48bx6aef8tJLL2EymejZsyePP/64Ns4ghGi9vBIAiouL
      yc/Pp23btlq+V5PJRFBQEBs2bODBBx/0xsf8qp07d/L1119z5513MmLECKKionj//ff597//
      fcZ1GI1GnnnmGfr27YuPj89Jb7JBQUEtBlH9/Pzw9fWlrq4OVVVRFAW3201tba2WQtHPzw+L
      xYLH4zmnb+BBQUEoikJdXd0py7hcrhbBzmAwcOuttzJ8+HD27dvHxo0bWbp0KfHx8YwfP96r
      01qFEBcerwSAdevWAfDaa68RGxurbX/33XdZtGgR+/bt88bH/Krq6mpcLhdRUVGEhYWxf/9+
      cnJyzqoORVHw8fE5q7n0MTExtG/fnmXLltGnTx/i4uJYtmwZlZWVjB07FoDU1FRtUPeKK64g
      Pz9fmw0EaJ+3e/dukpOTKS8vZ+/evdpnXHLJJcTExPDRRx/RsWNHYmNjKS4uJiQkhLi4OMLC
      wigqKmL79u307t0bHx8fKioq2LNnD3379iUjI4Pw8HDWrl1LdXU1Ho9HEq4L0QwPWpQAACAA
      SURBVMr95gBgs9nYsmULnTp10qZiNuvVqxeLFi1ix44d9OrV64Rjz7Q76HRlfr4vNTWVsLAw
      5syZw8cffwxAY2PjmZ7KGX/eL/eHhYVx9913M336dCZMmIC/vz+VlZX079+fyy+/HIAbbriB
      HTt2MGvWLO2JpLq6muTkZABiY2OJi4vjs88+4/vvv0dRFGw2GzqdDkVRiIyM5P7772fOnDk8
      8cQTmEwmnE4nEydOJC4ujkGDBrF8+XJeeOEFQkJCtJfXFixYwIcffkhgYCBmsxmr1crQoUPl
      5i+E+O0pIS0WC5s2bSIyMpKePXu22Gc2m8nOziYqKoqEhAS2bdtG586dadeuHXB8nvvevXsZ
      NGgQgYGBFBcXs3fvXtLS0oiMjKSoqIh9+/aRkZFBSEgIVqtVe9egS5cuqKrKgQMHKC0tpW/f
      vgQEBLB9+3aysrLw8/OjV69e+Pr6UlRUxPDhw4Hjb8y63W7S09NP+JZfVFREbm4u6enpREZG
      nnCuVquVzZs3Ex0dTWpqaot9Ho+H3NxcsrKyqKuro1OnTgwdOlR7p0FVVQ4ePMimTZtobGzU
      BnIVRSE9PR29Xs+ePXtYv349cDx4BgcHU15eTv/+/fH398fj8ZCfn8/27dtpaGggLi6OAQMG
      aDOotm/fzu7du3E6nQwZMoSOHTty8OBB9uzZQ2lpKSEhIfTs2ZP09PTf8isX55GqqixctZPF
      aw6c76aIi4DkBBbiAiIBQHiTzAcUQohWSvIBCHGBMfroCfKXpTzEbyddQEJcQFRVxeFw4Ovr
      e76bIi4C0gUkhBCtlAQAIYRopSQACCFEKyUBQAghWikZBBbiAqKqKtV1ZuzuXy8rvC88yIS/
      78UzefLiORMhWomV2YflRbDzZNJdg8hIjT/fzfAa6QISQohW6k8TADweD1artUU2sJ///Gek
      qio2mw2Hw3Fe6xBCiHPhlS4gm83GsWPHcLvdhIeHExUV1WJ/XV0dFRUV6HQ64uLiMJlM7Nu3
      j127djFo0CDi4+MpLi5m9uzZ3HvvvXTv3p19+/axePFi7r33Xjp27HjObfN4PJSWlp50VdCQ
      kJAWy1efLbfbzWuvvUb79u0ZM2bMOdVht9t59dVX6dKlCyNHjqSxsZG1a9fi5+fH4MGD8fHx
      bi+dqqrk5+fjcrmA41nagoKCiIyM9PpnCSH+3LzyP76wsJCHH34Ys9nM4MGDmTlzpnYzcbvd
      fPDBByxcuBB/f39efPFFBg8ezJYtW8jMzKRdu3bEx8fT0NDATz/9xIgRIwCoqqpiw4YN3Hzz
      zb+pbXa7nddee401a9acsO+6665j2rRp51y3x+Nh06ZNWK3Wc67D5XKRlZWlXa+6ujrmzZtH
      VFQUAwYM8PpN2ePx8Le//Y3KysoW2+Pi4hg/fjwjRow4o6WiGxoamDdvHgkJCdx0000tjlmw
      YAG1tbU88sgjZ5VXQQjxx/La3aX52/3Ro0cpLi4mMTEROL4e/86dO+nQoQPl5eVa+RtuuIH+
      /fsTFxfnrSacVocOHXjwwQdbpGQ82ZLPp+N2u3G73RgMht+cTUtV1ZPmKY6Ojubll18+aVIa
      VVVxu914PJ6TtqG5zuYcAqfTt29fHnroIdxuN0VFRfznP/9hzpw5DBgwQMvhfDp2u52tW7fS
      0NDAjTfe2GJfTk4Ox44d46GHHjrpeTd3dxmNRslKJsR55LUAoCgKffr0YePGjeTl5WkBoKKi
      gry8PO6++24+++wzrXxVVRUrVqxg7NixWlas02lqamLZsmV4PB7Gjh171mkVg4KCSE9PJyws
      rMV2s9nMkiVLMBqNjBkzBkVRKCwsZPny5QwbNozu3bvjdrtZt24d69ato6GhgY4dO3L77bcT
      GBh4Ql0LFy6kV69eWh7kw4cP89VXXzF69GhiYmK0vAArVqygoqKC6OhompqatDrcbjdZWVmE
      hYURGxtLU1MTn3/+OdHR0ej1etatW4fNZmPIkCFcffXV6PV6PB4PR44c4csvv6SqqorY2FiS
      kpIIDg5m0KBBJ70eoaGhWv6G3r17U1dXxxtvvEFtbS0hISF8//33mM1mrr/+evz9/WlsbOS/
      //0vSUlJJCUlsWTJEsrLy7HZbLzxxhsYjUauvPJKfvzxR/Ly8qirq+Ott95Cr9czcOBA0tLS
      sNlsrFy5kvXr16PT6UhPT2fkyJHo9Xqqq6v55JNPuPbaawkICGDZsmV06NCBa6+99qx+z0KI
      M+fVQeAuXboQFRXFhg0btG3r16+nXbt2WkBodvjwYRYsWEB1dfWv1quqKu+//z4ffvghbdq0
      8eq3xqCgIFwuF5mZmaxYsYLa2lpmzpxJVlYWCQkJOJ1O5s2bxz//+U8OHTqETqfj22+/paio
      6IS6mpqa+Oyzz9i5c6e2raioqMV57ty5k7/85S988803NDY2smvXLiwWi1beZrPxzTffsHbt
      Wm1g/IsvvmDKlCnMmjWL8vJydu3axaxZs7R0l5s2beLBBx/km2++oaGhgd27d/P888+zefPm
      0567qqq4XC727NnDunXrSExMJDIyUgt4K1aswGazAccT/yxbtoytW7fS1NTE4cOHsVgsNDQ0
      sH//fg4ePEhjYyOHDh2ivr4ep9PJgQMH2LdvH7W1tXg8Ht58801mzpyJyWRCURTeeust3n//
      fS1/8oIFC1i7di1///vfmTdvHgcOyFRHIX5PXu1g1uv1DBgwgK+//lrrF9+2bRuXXXbZOa9e
      6Ha7WblyJV988QW33347Q4YMOSEAOJ1OLRm6Tqc7ab/5wYMHefjhh1v0VY8aNYqRI0cycuRI
      du/ezdy5c9mxYwd5eXlMmzaN0NBQjh49yn/+8x+uvvpqHnvsMYKCgqivryc4OPisz6WxsZEF
      CxYQGRnJtGnT6NixIw0NDYwfP/5Xjx0wYABPPfUUoaGhfP/997z22mtUVVXh8XiYN28e/v7+
      vPzyy7Rr146amhoeffTR09aXlZXF3XffTVNTE2azmaioKKZMmUJwcDBOp/O0x3bq1Imnn36a
      SZMm0alTJyZMmIDBYMDPz4/OnTszZcoUSkpKmD59OkajEV9fXw4dOsSPP/7IjTfeyJNPPonb
      7eZ///d/+fLLL7ntttu0uhcuXEjHjh3JzMzkkksuObMLK4Q4J16f9pGens7nn39Obm6ultLw
      9ttv12adnA2Xy8WSJUu0NJGjR48+oV+8eRZNRUUFcPxG+fMbSjN/f386d+7cIhA1z1aKiIjg
      oYce4pFHHmHZsmXcdddd9O3bF0VRyM/Pp76+nltuuUUr7+fnB3DWUzfNZjNHjhyhX79+dO3a
      Fb1ej6qqZ9SdFRMTQ9u2bQFo06YNBoMBVVWpra2luLiYQYMG0aVLF+2a/NpAbnBwMKmpqVgs
      Fo4cOYLNZiM7O1ur43R8fHwwmUzo9XoMBgNBQUFa0A0MDMRgMKDX6wkMDNSud3FxMY2NjYSH
      h2vf7KOioigvL6e+vl6ru1OnTkyePFk7VyHE78frASApKYk2bdqwZcsW4uLicDgc9OrVi61b
      t551XW63m127dlFTU8OoUaNOOVZgMBi0G82pZs20bduWp5566oQxgGYJCQlER0dTUlJCQkKC
      dlM2m80ApzzubNjtdhoaGrT+fG9oflfibJ9IUlNTmTRpEnA80C5atIjZs2fTu3dvunfv7pW2
      /bKddrudzz77jK+++krbHh8fT1NTkxZUR44cKTd/If4gXg8A4eHhdOvWja1bt2qJ2X8+8+Zs
      GI1GJk6cSHZ2Np988gnx8fFceeWVLbqAjEYjTzzxRIsuoLNlt9uZN28eZrOZ9u3b89FHH5GW
      lkb79u1JTExEp9Oxbds22rVrd0b1/7wL5eczfXx9fQkODubo0aM4HA6MRiO/dSmmiIgIgoKC
      2LBhA3fccQfh4eHU1NSc1dOJXq8nISEBgLKyMi0ANM84+uV5wPHrrNPpMJvNuFyuFoFXr9dT
      X1/f4iW+iIgITCYTt956K7fffru23el0EhoaSmFhIYDMChLiD+T1AKDT6Rg4cCDLli1Dp9Mx
      efLkc/5PrSgK4eHhPPLII+Tn5/POO+8QFxdH165dtToVRcFo/PX0eFVVVXz77bctniISExPp
      2bMnGzdu5KuvvuKuu+6iR48ePPvss7z33ntMmTKFxMREevXqxfz58zEajXTq1Ins7GztBbaf
      8/X1Ra/Xs3nzZtLS0igpKWHFihXa/pCQEJKTk/npp5/o0qULPXr0YM2aNdTV1Z3T9YHj3VHX
      XnstH374IRMmTCAuLo7S0lKqq6tPG1zKyspYuXIlTqeT8vJyvvvuOwIDA0lOTkan0+Hv78+x
      Y8f44YcfiI6O5ocffmjx7oCfnx+hoaHs2LGDlStXkpSUREJCAmFhYbRp04ZVq1axZMkSevXq
      RVRUFJ07dyYhIYGvv/6a5ORkkpKSKC4u5uuvv+bxxx8/5/MXQpw7rwQARVFQFEX7dpyamkpI
      SAhGo5Hk5GStzLnUCce7XyZNmsQzzzzD888/z3vvvUdISMhZ1VVcXMysWbNabL/uuuto06YN
      77zzDp06dWLMmDEYDAbGjh3Lq6++Sr9+/bjhhht4+umnmTFjBs8//zwej4fg4GDS0tJO+JzQ
      0FAGDBjAl19+yWOPPUZERIT2FrOiKJhMJsaPH8+BAweYOXMmAN27d29xrr92LX65TVEUxowZ
      Q2hoKJs2bQJg2LBhVFZWnrJOnU7H7t272b17N3B8PCAxMZHJkyfToUMHdDodgwcPZuXKlcyY
      MQO9Xk+fPn0wGo3a7zggIICRI0eSk5PDtGnT8Pf355VXXiEjI4Prr7+etWvXMmfOHACefPJJ
      7rzzTp544glef/11Jk6cCKDVazAYtHrP5QlOCHFuvLIctNvt1vpxm7s1mpdeCAgIQKfT4XQ6
      sVgsmEwmDAYDDocDq9VKYGAger0el8tFY2MjAQEBGAwGnE4nVqsVk8mEj48PqqpisVhwuVwE
      BQWd8Y2i+biTzWwxGo0YjUYsFgsGgwF/f38ArS2+vr7aNqvVSk1NDWazmZiYGIKDg7UukOZB
      UTg+jbOwsJDGxkY6dOiAv78/NpuNoKAgbdDXbDZTVFSEoigkJSXhdDq1z/d4PFgsFu1buKqq
      NDU14ePjo7Wl+dr4+/tjMBiorq7WutlUVWXfvn08+uijPPLII9x9990nXA+z2dyiS0en02mz
      eJqDhsfjoaSkhLKyMqKjo4mOjsbhcLS4Th6Ph5qaGsrKyvD19aV9+/ba4LTZbKakpASPx0Ni
      YqJ2faxWK9XV1VgsFsLDwwkKCsLX1xePx4PZbNZ+/+LkVFVl4aqdshroeXKxrQYq+QAuAi+9
      9BLV1dVccskllJWVsXPnThoaGnj33Xd/0zpK4s9HAsD5dbEFAFn96yLQs2dPvvvuO1auXAkc
      X/Zi1KhRJCUlneeWCSH+zOQJ4CLw8zWC4HiXjl6vlxk1FyFVVdmwu4CtB8t/vbDwuhsGJNMx
      7rdPCf+zkAAgxAWkeTG9c32zXoifkykXQgjRSkkAEEKIVkoCgBBCtFISAIQQopWSaaBCXGAO
      HavmcGnD+W6G+BMZ1DOR8CD/sz5OAoAQF5jdh8vlRTDRQkpi5DkFAOkCEkKIVkoCgBBCtFJe
      6QKqrq7mm2++weFwkJKSwoABA7R9qqqSk5NDdnY2BoOBoUOHeiXhh8PhoLKykvDwcG1xMiGE
      EGfOKwGgqqqKDz/8kKamJtLS0ujdu7e2+qPT6WTp0qV888032oqR3ggAJSUlTJ48mQceeIAh
      Q4b85vqEEKK18VoXkE6nIzk5mZKSEi27ExxPhL59+3bS0tJOWMJZVVVsNhtVVVUtskf9nNvt
      prGx8YSMVA6Hg4KCAhoaZDaEEEKcC68FAEVR6Nu3L06nk71792rbDx06RFVVFYMGDWqxOJnZ
      bOadd97hxhtvZNSoUYwePZqsrCwtEOzevZu//e1vXHfdddxwww2MGjWKxYsX43a7+eKLL5g4
      cSJ2u505c+YwatQoxo0bh91u99bpCCHERc+rg8BxcXGkpKSwYcMGnE4nLpeL9evX06tXL8LD
      w7VybrebpUuX8tlnn3HrrbcyZcoUYmJimDFjBqWlpQAcOXIEHx8fxowZw2OPPUZoaCgfffQR
      ubm5JCYmkpGRgaIodO/eneHDh3P55ZefMiG8EEKIE3k1ACiKwu23305OTg779+/n6NGjbN68
      mVtuuaVF3t7KykqWLVtG7969GTFiBMnJyYwfP55jx46xevVqAG666Sb++te/EhgYSGVlJfHx
      8TQ1NZGXl0fPnj257bbbMBqNDB06lIcffpj7778fvV7vzdMRQoiLmte/Mnfo0IHY2FiysrKI
      i4vDZrORlpbGzp07tTIWiwWHw8HWrVt59NFHte2RkZHYbDbcbjf//e9/ee+994iPjychIQGL
      xeLtpgohRKvm9QAQGRlJSkoKO3bs4ODBg3Tp0oWwsJYJFEJCQvDz8yM6OprJkydrYwOqqhIQ
      EIDFYmHJkiX06dOHp556ivDwcHJzc9m3b1+LehRFobGxEVVVJfmJEEKcJa+/CKbX6xkwYAA5
      OTlkZWUxcODAE27OoaGhdOnShf3795OXl0dUVBQBAQFkZ2ezf/9+bXaQxWJBr9dTWlrK0qVL
      tUTzAL6+vgQEBLBmzRoOHjxISUkJkttGCCHOnFeeAJpv8M1/9+7dG39/f/z8/OjatWuLfXA8
      SDz88MM0NDQwefJkbYpnXFwcTz75JCaTieuuu4558+Zx9dVX4+/vT5cuXVqkOYyNjeX666/n
      3//+N2PHjiUgIIBVq1a1GGsQQghxal5JCWm32zl27BiRkZGEhITgdrs5duwYcPymbjAYaGxs
      pKysjNjYWAIDA1FVFbPZzNGjR6mpqSEgIIA2bdoQFRWFwWCgqamJ3bt309DQQFJSEtHR0dTU
      1BAREUFISAhwfCzhwIEDVFdXExYWRlpamnQFiYuaqqosXLVTFoMTLcx8ZDjJbSPP+jjJCSzE
      BUQCgDiZcw0AshicEEK0UvLmlBAXmKjQALp3iD7fzRB/IiZfwzkdJ11AQlxAVFXF4XDg6+t7
      vpsiLgLSBSSEEK2UBAAhhGilJAAIIUQrJQFACCFaKZkFJMQF5lhlA2W11lPu794hhuAAGSQW
      v04CgBAXmM25x077IthLD11BcEDUH9gicaGSLiAhhGil/jQBwO12U1NTg9PpPN9NEUKIVsEr
      XUD19fVs2rRJu3n7+vrStm1bEhISCAwMPKMF2goKCvif//kfJk6cSN++fb3RLCGEEKfhlQBQ
      VlbGjBkzMJvN/1exjw9Dhw5lwoQJxMTE/GodNpuN/Pz8Fmv+CyGE+P14rQtIURTuvfdeVq5c
      yWeffcbYsWNZs2YNn3zyyW+q1+Px4HA4TprsRVVVGhsbtaxgZ3OsEEK0dl6dBWQymQgPDyc8
      PJwHH3yQNWvWsGfPHgBefvllfH19efzxxwEoLy9n9uzZXHHFFQwfPvyEupqamli4cCEbNmzA
      YrEQHh7O8OHDufXWW4HjTx0ff/wxmzdvRlEUevTowaOPPkpYWBh2u53ly5fz3Xff0dTURGBg
      IFdffTU33HAD/v7+3jxlIYS4YP0ug8CqqqLX6wG0cYE9e/aQm5urlbFarWzbto3S0tKTHv/d
      d98xb948wsLCGDZsGAEBAXzzzTcAuFwuMjMz+fLLL7nuuusYOnQoa9as4f3338fpdJKdnc1r
      r72GyWRi6NChxMXFsWrVKhoaGn6P0xVCiAuSV58Aamtryc/Px2w2s2rVKkpKShg3btxZ1+Px
      eMjPzyc0NJTx48eTmpoKoI0x7N27l02bNnHnnXdy3333oaoqFouFr776invuuYe8vDxUVeXR
      Rx+lS5cuKIqC1WrFYDi3JVOFEOJi5LUAoKqq1u2iqio6nY6rr76akSNHnnVdOp2OtLQ0Vq5c
      yT//+U969OjBoEGD6NOnD0FBQVRUVGC1WqmsrOTzzz8HjgcHs9lMTU0NaWlpBAcH8/TTT5Oa
      mkr//v3p378/0dGyhroQQjTzWgBQFIXLLruMwYMH4+/vT1RUFMnJyee0brmiKFo969atIzs7
      m7Vr19K3b1+ee+453G43brebHTt2UFBQoB3Xq1cvALp168bLL7/MmjVryM7O5pVXXqF3795M
      mTLljGYkCSFEa+DVLqCUlBSuv/76U+632+14PB50Oh2qqp5ydk5zl05GRgb9+vXD7XYzd+5c
      lixZQl5eHpGRkZhMJq688koefvhh7Tir1YrRaKSxsZEePXrQq1cv3G43S5cu5eWXX6agoEAC
      gBBC/P/+sLWAIiIi2L59O5mZmQBs3LiR+vr6k5Z1uVy89dZbNDY2MmDAAPz8/Ni1axcmk4mw
      sDCioqLo1q0bCxcuRKfTkZSURElJCStWrGDmzJl8+eWXHDp0iCuuuIKAgAA2b95MYGAgISEh
      f9TpCiHEn55XAoDBYCA6OprAwMBTlrnpppsoKChg6dKlhISEkJGRgcvl0o5prsPX1xedTkff
      vn2ZP38+s2fPRlVVgoODuffee0lISECv1/PEE0/wwQcf8Pnnn+PxePD19WXgwIGEhISQlpbG
      9u3beeONN7R9f/nLX0hKSvLG6QohxEXhD80J3NDQQG1tLdHR0Wc0H9/lclFbW4vVaiUqKuqE
      Y5q7imw2G0FBQRiNRm2fx+OhpqZGe4cgICDgjJakEOLPTFVVFq7a+aurgXZJlNVAxa/7Q5eD
      Dg4OJjg4+IzL+/j4EBV16n/IiqIQEBBAQEDACft0Oh2RkZHn1E4hhGgN/jSrgQohhPhjSUIY
      IS4wPTrGEGA6dRdqdNiJT8RCnMwfOgYghPhtVFXF4XCc0/s1QvySdAEJIUQrJQFACCFaKQkA
      QgjRSkkAEEKIVkpmAQlxgcneX8LWg+Xaz53iw7m+f+fz2CJxoZIAIMQF5mh5HT/uKNB+tjlc
      EgDEOZEuICGEaKW8+gSgqipOpxOXy4VOp8NgMGipIX9epq6ujoKCAqxWK71798bf3x+Xy0Vp
      aSlFRUWEhoZqWcBOxePxcOzYMQASEhLQ6SSWCSHE2fBaAPB4PKxfv54VK1Zw5MgRQkJCSE9P
      59ZbbyU8PFwrd+TIEZ566imKi4vx8fFh3rx5dOzYkU8//ZQ333wTl8tF9+7d+eCDD077eRaL
      hVdeeQVFUZg+ffpJ1wMSQghxal4JAB6Phy+++IJZs2ZpmcDq6upYsGAB27dv58UXXyQ8PByP
      x8OyZcuor6/nueeeIz09nfDwcMrLy1m2bBndunXjqaeektSNQgjxB/BKACgrK2PhwoUkJCQw
      depUOnXqhN1uZ/78+XzyySd89913jBo1ipqaGkpKSoiPj6dz587o9XrsdjulpaXU1dUxZMgQ
      IiMjte4cm81GU1MTjY2NqKpKaGgowcHBp+zucblc1NfX09jYiMFgIDAwkICAgBO6oYQQQngp
      AOzdu5eCggKeeeYZLrnkEhRFwd/fn1tvvZV169axevVq+vTpw3PPPUdeXh6qqvLAAw+g1+u5
      5ppr+Oqrr2hqamLhwoX897//JSUlhczMTF599VXWrFlDbW0tiqLQvn17Jk6cSN++fU9og9vt
      ZtGiRSxYsIDq6mp0Oh2dOnVi6tSpdO4sMySEEOKXvBIACgsL0ev19O7du0XSlcjISBITE9m+
      fTuhoaE8+OCDzJ8/n4aGBsaNG0dgYCDx8fHExcUxd+5chgwZwuDBg7WcAQaDgQceeIAuXbpQ
      WlrK66+/zttvv02fPn1OaENtbS2ZmZn079+fsWPH4nA4+Omnn3C73d44RSGEuOh4JQDU19ej
      KMoJyV6at9XX1+Pn50dGRgbffvstiqIwaNAgQkNDtXLz58+nU6dODBs2TDv+8ccfx2azYbVa
      CQkJITk5mR07dpw0mbzL5cLtdhMUFERERATh4eGkp6dLFjAhhDgFrwSA8PBwbXrnz2f8ANTV
      1REWFnZO0zS//fZbli1bRnFxMTabDZfLhY/PyZscERHBDTfcwFdffcXatWtJSUnhyiuv5Oqr
      rz6j9JNCCNHaeGXyfFJSEh6Ph6ysLDwej7a9pKSE/Px82rdvf8ob96ns2LGDN998k9TUVN58
      801WrlzJ6NGjT1nex8eH//mf/+GTTz7hgQceQKfTMXPmTJYvX37O5yWEEBczrwSAlJQUOnXq
      xOeff87evXuxWCzU1tayePFiSktLGT58eIuE7WeisLAQj8fDwIEDueSSS7BYLFRXV5+yfF1d
      Hbm5ubRp04bbb7+dZ555hoCAAPLz83/r6QkhxEXJK11AMTEx3HvvvUydOpVnnnlGew9g7969
      9O/fnyuvvPKs++LbtWuHy+Xi7bff5vvvv+fQoUMcPnz4lFM6CwsLeeKJJ0hLSyMmJoaioiIs
      FsuvvlEshBCtlX7q1KlTf2sliqKQlJRERkYGdrud2tpawsLCuO2223j44YcJDAwEji8DYbFY
      iIuLo1u3bhgMBuD4FE6Hw0GPHj1ISEgAoE2bNoSHh1NVVYWqqowYMYJhw4YRERFBv379UBQF
      i8VCu3btSE1NJSoqioSEBCor/z/27ju8iip94Ph3bk9y0xvpPUAoIRBCQIqK4irY8beiUhR1
      VeyyroAFUVBAXAtrRREbCooiJdKkQ0ISQiCQAqQXQnq5KbfN7w+e3CVLh6uIOZ/n4Y9MOXNm
      rs47c86Z81ZRVVWFk5MTkyZNYtSoUeI7AOEvJSv/GAcL//s2HOTjwtC+wZexRsKVyu45gS0W
      Cy0tLWg0GjQazSWNwrFarbS1taFUKs+7LJPJRHt7OyqVCq1WK0YBCX8psiyzdMM+vt+Sa1s2
      uFcgL9w79DLWSrhS2X06aKVSibOzs13KUigUODo6XtA+arXa9mYhCIIgnJmYQlMQBKGLsnsT
      kCAIvx9Zlqmpb6L9pA/cHTRqPFzEty7ChRMBQBCuILIsYzQa0Wq1l7sq5U8sggAAIABJREFU
      wl+AaAISBEHookQAEARB6KJEABAEQeiiRAAQBEHoouz+HYAgCL+vVTtz+XnnkbNuM/HGflwf
      H/4H1Ui4UokAIAhXGKPZQlOr8azbmMwiEZJwbqIJSBAEoYuyyxuAyWSitra2Uy4AAJ1Oh5ub
      20XPx9PW1kZubi4ajYbu3btfVFKZC1VTU4PReOrTlZOT0ykZzy5ES0sLq1evxs/Pj2HDhl1U
      GU1NTaxevZqwsDASExOxWCykp6fj7OxMjx497D7vUX19PUajEU9PT9uEemazmaqqKjQaDR4e
      HrZjGgwGmpqa8Pb2xmQysX//fjw8PIiIiBDzMQnCn5RdAkBpaSmvvPIKzc3NnZbHxcXxwgsv
      XPTcPNXV1SxYsAAfHx/mzJmDRqMhIyOD4uJiRo4caZtl1J4WLFhATk7OKctvuOEG/vGPf1x0
      uQaDgeXLlxMXF3fRAaC5uZnly5czYsQIEhMTMRqNzJgxg9jYWObPn3/RdTuTH3/8kZ07d/Li
      iy8SHn6iPfngwYO8+uqrhIWF8corr+Di4oIsyyxfvpz169fzwQcf0NrayowZM7j66quZPn26
      3eslCIJ92CUAGI1GSktL6dGjB3FxcbblgYGBl/TU7ubmxvjx43F0dLQ9ge7atYv169czYMCA
      3yUAHDt2jJaWFu68885Oy3v27Gn3Y10qtVrNlClT8PHx+V3K9/Ly4vDhwxQUFNgCQEZGBiUl
      JbS3t1NRUYGLiwsmk4mMjAwkSbJNxjdlyhSCgoJ+l3oJgmAfdu0Ejo+P54EHHui0zGq1cujQ
      Ierr6+nXrx9lZWXk5uYydOhQ6urqKCgoIDEx0TbrZ2pqKhaLhcTERDQaDc7Ozjg5OSHLMsnJ
      yeTn52MwGNi2bRuenp4EBgYSExNDW1sbe/bsoby8HKVSSWBgILGxsTg5OV3weXh6evLQQw+d
      stxgMLBnzx5cXFyIjY1FpVJx7NgxDhw4QM+ePQkMDMRqtZKXl8f+/fsxGAyEhoYyaNCgU8pq
      bm4mLS2N0NBQQkNDASgrKyMvL49+/frh7u4OQGVlJenp6dTX16NSqWhra7OVIUkSHh4euLi4
      IEkSJpOJHTt24OvriyzLZGRkYLVa6d+/P7169UKSJGRZprKykoyMDOrq6vD19cXLywsnJyci
      IyM71TE8PBwHBwdycnK49tprMRqNHDp0iIEDB1JUVERRURHdu3enqqqK8vJy4uLi0Gq1mM1m
      3N3dbfUyGo1s3ryZ8PBwWlpa2LdvH0qlkoSEBKKjozv9d5KWlobRaKRnz54MGTJE5HIQhN/R
      7z4KSJZl1qxZQ1ZWFnfeeSeffvopTU1NREdHk5qaypdffsmiRYtsAeCrr76ipaWFxMREDAYD
      n3zyCaGhoYSHh7Ny5UoyMjIwGAx8//33qFQqrr/+esLCwvjwww9JSkrC1dXVlizmueeeY+TI
      kXY7F0mS2LlzJzt37uSNN96gZ8+evPPOO5SUlPD6668jyzIrV67k888/x2q12s7J3d2dgICA
      TmUdP36cBQsW8Pe//90WAPbt28cHH3zAG2+8gbu7OwcPHmTu3LmUlZXh6uqK1WqltrbWVobJ
      ZOLdd98lLi6O3r1709bWxvz585EkCY1Gg8Viob6+Hr1ez9dff427uztHjhxhxowZ1NbW4uzs
      jEKhoKmpiTvuuOOUABAQEICnpyeHDh1ClmXq6+spKSnh1ltvJSkpidzcXEaNGkVVVRW1tbVE
      R0ejVCqpq6vj7bff5oYbbiAqKorW1lZmzZqFh4cHSqXSdh6rVq1i0aJF6PV6Nm3axNtvv42L
      iwtKpZJly5YxadIk7r777gvOJy0Iwvmx6/9ZRqOxUz+AWq1GqVRisVgoKSnhww8/JDg4mDvu
      uAM/Pz+sVitGo5GT56Mzm82YzWbb3yaTCbPZjEaj4cknn+Szzz5j9+7dTJ8+HV9fX5ydnamu
      rmb79u0MGjSIKVOmoFQqycvLO6Vp5HTz3p2ug7KyspI33nij07KRI0eSkJDA5MmT2bp1K599
      9hnDhw9n27ZtzJgxg9DQUMrLy/n888/x9fXln//8Jx4eHpSWluLv73/KMWRZxmQyYbH8d7ie
      1WrFZDIhyzKyLLN48WLKysp49tlniYuLo7S0lP9N4NZxfU7+OygoiPvvv5/AwECSkpL4/PPP
      KSgoQKfTsXjxYmpra3n66aeJi4ujqqqKqVOndiqjg7u7O0FBQaSlpWGxWKirq6O8vJzY2FgK
      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
      mEwmtFrtRc3x33GMk9NlCoIgXCy75gQeOHAgycnJHD161BYAqqqqyMvL49577+XHH3+0bd/Q
      0MDOnTttiVYsFgu//fYbe/fupb29HX9/f0aOHGlLjG6xWNi+fTu7d++mpaXFltjF2dmZ2tpa
      VqxYQV5eHh4eHowePZo+ffqcV73NZjNpaWmkpqZSXV2NTqdj8ODBjBgxAkmSaGlpYfXq1Xh7
      e6PRaNi6dSutra0MHz6ckSNH2uby37dvH2vWrKG5uZmoqCjuvvtunJycbMfZv38/SUlJVFdX
      ExISwh133GE796SkJAwGA2PHjgWgpaWFH3/8kaioKBITEwE4fPgwGzZsoKqqCmdnZxISEkhI
      SDglH4IgCML5smsncExMDF5eXuzYscO2bPv27QQFBdlu5B0OHz7MokWLbG8FS5cuZcaMGeTl
      5VFfX8+6dev46KOPgBNPvvPmzWPGjBlkZ2fT1NRkS/tYXV3NU089xYoVK3ByciInJ4ennnqK
      jIyM86pzQUEBc+bMIS0tDYPBQGZmJjNmzGD16tXIskxbWxs//PAD//rXv3jttdfIz89nz549
      zJ07l8zMTOBEhrOnn36akpIS1Go1y5Yt44UXXqCtrQ1Zltm2bRuPPPII6enptpwGU6ZMsaV8
      XLduHcuXL7fVqbW1lW+//ZbU1FQASkpKePjhh1m3bh2NjY0cOnSId999l+Li4ov/sQRB6PLs
      Oh20SqVixIgRrF27loaGBpRKJampqQwbNuysT6pms5mcnBwCAwO55557CA4ORqfT2TqM9+/f
      z4YNG7j11luZPHkyOp2OhoYGXF1d+eWXXygvL+epp57i6quvpqioiFdffZWVK1fSq1evc9bZ
      z8+P2bNn25qejhw5wscff0xqaip/+9vfbNslJCTwzDPP4OnpyaZNm3j33XepqqqipaWF7777
      joCAAF555RUcHR1ZvXo1Cxcu5ODBg0RGRvL111/Ts2dPpk2bRkBAAPv27WP27Nn88MMPTJs2
      7Zx1zM/Pp62tjfHjx5OQkICrqyutra0iIY4gCJfE7vkARo4cydq1a9m8eTPdunWjuLiYZ599
      lqKiojPuo1aruf3228nMzOSVV17B19eXXr16MXHiRGRZZs+ePTg4ODB27Fg8PT0BcHJywmq1
      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
    </thumbnail>
    <thumbnail height='384' name='Undernourished Rate' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARvklEQVR4nO3d+ZNV5Z3H8c9z7t4bazeLjaCCCiGCCTCDCq6AKyI6aswYp6L/z6SmajLG
      qoyTiUEiiSDjWO40gkTBKZEtM90ssgvdTW+3737OMz90nDGODhiW07e/71dVV/FD//BtbtV5
      n3Oec57rvPdeAABTnHMuiHsIAEA8CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgVPJC
      fqlarSoMw8s9CwDgCrqgAHjvlc1mL/csAIAriFtAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABiVjHsAIA7ee/lKRb5QUFQuS7VQPqzJ10IpDCUnuURCSiTlkgm5ZFIum5XL5RSkUpJzcf8J
      wEUjABhzfBgqGhxSODioKJ9XODCgsKdHte5u1Xp6FOXzioby8lEkJRNyQWLkgP7VH0ny/is/
      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
    </thumbnail>
  </thumbnails>
</workbook>
